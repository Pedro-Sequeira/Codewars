<?xml version="1.0" encoding="utf-8"?>
<layout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools">

    <data>

        <variable
            name="viewModel"
            type="com.example.android.codewars.viewModels.ChallengeDetailsViewModel" />
    </data>

    <ScrollView
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:fillViewport="true">

        <androidx.constraintlayout.widget.ConstraintLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content">

            <TextView
                android:id="@+id/challenge_name"
                style="@style/Title"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginTop="@dimen/margin_double"
                android:text="@{viewModel.challenge.name}"
                app:layout_constraintEnd_toEndOf="parent"
                app:layout_constraintStart_toStartOf="parent"
                app:layout_constraintTop_toTopOf="parent"
                tools:text="Primes in numbers" />

            <TextView
                android:id="@+id/challenge_details"
                style="@style/Description"
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_marginStart="@dimen/margin_normal"
                android:layout_marginTop="@dimen/margin_double"
                android:layout_marginEnd="@dimen/margin_normal"
                android:layout_marginBottom="@dimen/margin_double"
                android:text="@{viewModel.challenge.description}"
                app:layout_constraintBottom_toBottomOf="parent"
                app:layout_constraintEnd_toEndOf="parent"
                app:layout_constraintStart_toStartOf="parent"
                app:layout_constraintTop_toBottomOf="@id/challenge_name"
                app:layout_constraintVertical_bias="0"
                tools:text="Coding decimal numbers with factorials is a way of writing out numbers \nin a base system that depends on factorials, rather than powers of numbers.\n\nIn this system, the last digit is always `0` and is in base 0!. The digit before that is either `0 or 1` and is in base 1!. The digit before that is either `0, 1, or 2` and is in base 2!, etc.\nMore generally, the nth-to-last digit is always `0, 1, 2, ..., n` and is in base n!.\n\nRead more about it at: http://en.wikipedia.org/wiki/Factorial_number_system\n\n\n## Example\n\nThe decimal number `463` is encoded as `\341010\`, because:\n\n463 = 3×5! + 4×4! + 1×3! + 0×2! + 1×1! + 0×0!\n\n\nIf we are limited to digits `0..9`, the biggest number we can encode is 10!-1 (= 3628799). So we extend `0..9` with letters `A..Z`. With these 36 digits we can now encode numbers up to 36!-1 (= 3.72 × 10<sup>41</sup>)\n\n\n## Task\n\nWe will need two functions. The first one will receive a decimal number and return a string with the factorial representation.\n\n~~~if:java\n**Note:** the input number is at most a long.\n~~~\n\nThe second one will receive a string with a factorial representation and produce the decimal representation.\n\nGiven numbers will always be positive.\n" />

            <include
                android:id="@+id/progress_bar_details"
                layout="@layout/layout_progress_bar"
                android:layout_width="0dp"
                android:layout_height="0dp"
                android:visibility="gone"
                app:apiStatus="@{viewModel.status}"
                app:layout_constraintBottom_toBottomOf="parent"
                app:layout_constraintEnd_toEndOf="parent"
                app:layout_constraintStart_toStartOf="parent"
                app:layout_constraintTop_toTopOf="parent"
                tools:visibility="visible" />

        </androidx.constraintlayout.widget.ConstraintLayout>
    </ScrollView>
</layout>